{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/swungleek/7a739554-06f9-4564-a099-49f4b83047ae/CDD/React/ps-drc/src/components/Speakers/Speakers.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport SpeakerSearchBar from '../SpeakerSearchBar/SpeakerSearchBar';\nimport Speaker from '../Speaker/Speaker';\nimport { REQUEST_STATUS } from '../../reducers/request';\nimport Request from '../RPs/Request';\nimport SpecialMessageRenderProps from '../RPs/SpecialMessageRenderProps';\n\nconst Speakers = ({\n  bgColor\n}) => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: bgColor,\n    children: [/*#__PURE__*/_jsxDEV(SpeakerSearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(SpecialMessageRenderProps, {\n        children: ({\n          specialMessage\n        }) => {\n          return /*#__PURE__*/_jsxDEV(Request, {\n            baseUrl: \"http://localhost:4000\",\n            routeName: \"speakers\",\n            children: ({\n              records: speakers,\n              status,\n              error,\n              put\n            }) => {\n              const onFavoriteToggleHandler = async speakerRec => {\n                put(_objectSpread(_objectSpread({}, speakerRec), {}, {\n                  isFavorite: !speakerRec.isFavorite\n                }));\n              };\n\n              const success = status === REQUEST_STATUS.SUCCESS;\n              const isLoading = status === REQUEST_STATUS.LOADING;\n              const hasErrored = status === REQUEST_STATUS.ERROR;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [specialMessage && specialMessage.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-orange-100 border-l-8 border-orange-500 text-orange-700 p-4 text-2xl\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"font-bold\",\n                    children: \"Special Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: specialMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 25\n                }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this), hasErrored && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Loading error... Is the json-server running? (try \\\"npm run json-server\\\" at terminal prompt)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [\"ERROR: \", error.message]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 25\n                }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n                  children: speakers.filter(rec => {\n                    const targetString = `${rec.firstName} ${rec.lastName}`.toLowerCase();\n                    return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n                  }).map(speaker => /*#__PURE__*/_jsxDEV(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n                    onFavoriteToggle: () => onFavoriteToggleHandler(speaker)\n                  }), speaker.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/media/swungleek/7a739554-06f9-4564-a099-49f4b83047ae/CDD/React/ps-drc/src/components/Speakers/Speakers.js"],"names":["React","useState","SpeakerSearchBar","Speaker","REQUEST_STATUS","Request","SpecialMessageRenderProps","Speakers","bgColor","searchQuery","setSearchQuery","specialMessage","records","speakers","status","error","put","onFavoriteToggleHandler","speakerRec","isFavorite","success","SUCCESS","isLoading","LOADING","hasErrored","ERROR","length","message","filter","rec","targetString","firstName","lastName","toLowerCase","includes","map","speaker","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport SpeakerSearchBar from '../SpeakerSearchBar/SpeakerSearchBar';\nimport Speaker from '../Speaker/Speaker';\n\nimport { REQUEST_STATUS } from '../../reducers/request';\n\nimport Request from '../RPs/Request';\nimport SpecialMessageRenderProps from '../RPs/SpecialMessageRenderProps';\n\nconst Speakers = ({ bgColor }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  return (\n    <div className={bgColor}>\n      <SpeakerSearchBar\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n      />\n      <>\n        <SpecialMessageRenderProps>\n          {({ specialMessage }) => {\n            return (\n              <Request baseUrl=\"http://localhost:4000\" routeName=\"speakers\">\n                {({ records: speakers, status, error, put }) => {\n                  const onFavoriteToggleHandler = async (speakerRec) => {\n                    put({\n                      ...speakerRec,\n                      isFavorite: !speakerRec.isFavorite,\n                    });\n                  };\n                  const success = status === REQUEST_STATUS.SUCCESS;\n                  const isLoading = status === REQUEST_STATUS.LOADING;\n                  const hasErrored = status === REQUEST_STATUS.ERROR;\n\n                  return (\n                    <>\n                      {specialMessage && specialMessage.length > 0 && (\n                        <div\n                          className=\"bg-orange-100 border-l-8 border-orange-500 text-orange-700 p-4 text-2xl\"\n                          role=\"alert\"\n                        >\n                          <p className=\"font-bold\">Special Message</p>\n                          <p>{specialMessage}</p>\n                        </div>\n                      )}\n\n                      {isLoading && <div>Loading...</div>}\n                      {hasErrored && (\n                        <div>\n                          Loading error... Is the json-server running? (try \"npm\n                          run json-server\" at terminal prompt)\n                          <br />\n                          <b>ERROR: {error.message}</b>\n                        </div>\n                      )}\n                      {success && (\n                        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n                          {speakers\n                            .filter((rec) => {\n                              const targetString = `${rec.firstName} ${rec.lastName}`.toLowerCase();\n                              return searchQuery.length === 0\n                                ? true\n                                : targetString.includes(\n                                    searchQuery.toLowerCase(),\n                                  );\n                            })\n                            .map((speaker) => (\n                              <Speaker\n                                key={speaker.id}\n                                {...speaker}\n                                onFavoriteToggle={() =>\n                                  onFavoriteToggleHandler(speaker)\n                                }\n                              />\n                            ))}\n                        </div>\n                      )}\n                    </>\n                  );\n                }}\n              </Request>\n            );\n          }}\n        </SpecialMessageRenderProps>\n      </>\n    </div>\n  );\n};\n\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}