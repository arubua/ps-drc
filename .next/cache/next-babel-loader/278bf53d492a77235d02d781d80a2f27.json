{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/swungleek/7a739554-06f9-4564-a099-49f4b83047ae/CDD/React/ps-drc/src/contexts/ThemeContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useTheme from '../hooks/useTheme';\nvar THEMELIST = {\n  DARK: 'dark',\n  LIGHT: 'light'\n};\nvar ThemeContext = /*#__PURE__*/React.createContext();\n\nvar ThemeProvider = function ThemeProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      startingTheme = _ref.startingTheme;\n  var state = useTheme(startingTheme);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ThemeProvider, \"Qw9ZwI+qSALy/No6JuJQGDL15Ww=\", false, function () {\n  return [useTheme];\n});\n\n_c = ThemeProvider;\nexport { ThemeContext, ThemeProvider, THEMELIST };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/media/swungleek/7a739554-06f9-4564-a099-49f4b83047ae/CDD/React/ps-drc/src/contexts/ThemeContext.js"],"names":["React","useTheme","THEMELIST","DARK","LIGHT","ThemeContext","createContext","ThemeProvider","children","startingTheme","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,MADU;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAAlB;AAKA,IAAMC,YAAY,gBAAGL,KAAK,CAACM,aAAN,EAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAiC;AAAA;;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AACrD,MAAMC,KAAK,GAAGT,QAAQ,CAACQ,aAAD,CAAtB;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA,cAAsCF;AAAtC;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CAND;;GAAMD,a;UACUN,Q;;;KADVM,a;AAQN,SAASF,YAAT,EAAuBE,aAAvB,EAAsCL,SAAtC","sourcesContent":["import React from 'react';\nimport useTheme from '../hooks/useTheme';\n\nconst THEMELIST = {\n  DARK: 'dark',\n  LIGHT: 'light',\n};\n\nconst ThemeContext = React.createContext();\n\nconst ThemeProvider = ({ children, startingTheme }) => {\n  const state = useTheme(startingTheme);\n\n  return (\n    <ThemeContext.Provider value={state}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, ThemeProvider, THEMELIST };\n"]},"metadata":{},"sourceType":"module"}