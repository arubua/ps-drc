{"ast":null,"code":"import React, { useReducer, useEffect } from 'react';\nimport requestReducer, { REQUEST_STATUS } from '../reducers/request';\nimport axios from 'axios';\nimport { GET_ALL_FAILURE, GET_ALL_SUCCESS, PUT_FAILURE, PUT_SUCCESS } from '../actions/request';\n\nconst useRequest = (baseUrl, routeName) => {\n  const {\n    0: {\n      records,\n      status,\n      error\n    },\n    1: dispatch\n  } = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${baseUrl}/${routeName}`);\n        dispatch({\n          type: GET_ALL_SUCCESS,\n          records: response.data\n        });\n      } catch (e) {\n        console.log('Loading data error', e);\n        dispatch({\n          type: GET_ALL_FAILURE,\n          error: e\n        });\n      }\n    };\n\n    fetchData();\n  }, [baseUrl, routeName]);\n  const propsLocal = {\n    records,\n    status,\n    error,\n    put: React.useCallback(async record => {\n      try {\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\n        dispatch({\n          type: PUT_SUCCESS,\n          record: record\n        });\n      } catch (e) {\n        dispatch({\n          type: PUT_FAILURE,\n          error: e\n        });\n      }\n    }, [])\n  };\n  return propsLocal;\n};\n\nexport default useRequest;","map":{"version":3,"sources":["/media/swungleek/7a739554-06f9-4564-a099-49f4b83047ae/CDD/React/ps-drc/src/hooks/useRequest.js"],"names":["React","useReducer","useEffect","requestReducer","REQUEST_STATUS","axios","GET_ALL_FAILURE","GET_ALL_SUCCESS","PUT_FAILURE","PUT_SUCCESS","useRequest","baseUrl","routeName","records","status","error","dispatch","LOADING","fetchData","response","get","type","data","e","console","log","propsLocal","put","useCallback","record","id"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,cAAP,IAAyBC,cAAzB,QAA+C,qBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,oBALP;;AAOA,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAwB;AACzC,QAAM;AAAA,OAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA;AAAnB,KAAD;AAAA,OAA6BC;AAA7B,MAAyCf,UAAU,CAACE,cAAD,EAAiB;AACxEW,IAAAA,MAAM,EAAEV,cAAc,CAACa,OADiD;AAExEJ,IAAAA,OAAO,EAAE,EAF+D;AAGxEE,IAAAA,KAAK,EAAE;AAHiE,GAAjB,CAAzD;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,GAAET,OAAQ,IAAGC,SAAU,EAAlC,CAAvB;AACAI,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEd,eADC;AAEPM,UAAAA,OAAO,EAAEM,QAAQ,CAACG;AAFX,SAAD,CAAR;AAID,OAND,CAME,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,CAAlC;AAEAP,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEf,eADC;AAEPS,UAAAA,KAAK,EAAEQ;AAFA,SAAD,CAAR;AAID;AACF,KAfD;;AAgBAL,IAAAA,SAAS;AACV,GAlBQ,EAkBN,CAACP,OAAD,EAAUC,SAAV,CAlBM,CAAT;AAoBA,QAAMc,UAAU,GAAG;AACjBb,IAAAA,OADiB;AAEjBC,IAAAA,MAFiB;AAGjBC,IAAAA,KAHiB;AAIjBY,IAAAA,GAAG,EAAE3B,KAAK,CAAC4B,WAAN,CAAkB,MAAOC,MAAP,IAAkB;AACvC,UAAI;AACF,cAAMxB,KAAK,CAACsB,GAAN,CAAW,GAAEhB,OAAQ,IAAGC,SAAU,IAAGiB,MAAM,CAACC,EAAG,EAA/C,EAAkDD,MAAlD,CAAN;AACAb,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEZ,WADC;AAEPoB,UAAAA,MAAM,EAAEA;AAFD,SAAD,CAAR;AAID,OAND,CAME,OAAON,CAAP,EAAU;AACVP,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEb,WADC;AAEPO,UAAAA,KAAK,EAAEQ;AAFA,SAAD,CAAR;AAID;AACF,KAbI,EAaF,EAbE;AAJY,GAAnB;AAmBA,SAAOG,UAAP;AACD,CA/CD;;AAiDA,eAAehB,UAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport requestReducer, { REQUEST_STATUS } from '../reducers/request';\nimport axios from 'axios';\nimport {\n  GET_ALL_FAILURE,\n  GET_ALL_SUCCESS,\n  PUT_FAILURE,\n  PUT_SUCCESS,\n} from '../actions/request';\n\nconst useRequest = (baseUrl, routeName) => {\n  const [{ records, status, error }, dispatch] = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${baseUrl}/${routeName}`);\n        dispatch({\n          type: GET_ALL_SUCCESS,\n          records: response.data,\n        });\n      } catch (e) {\n        console.log('Loading data error', e);\n\n        dispatch({\n          type: GET_ALL_FAILURE,\n          error: e,\n        });\n      }\n    };\n    fetchData();\n  }, [baseUrl, routeName]);\n\n  const propsLocal = {\n    records,\n    status,\n    error,\n    put: React.useCallback(async (record) => {\n      try {\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\n        dispatch({\n          type: PUT_SUCCESS,\n          record: record,\n        });\n      } catch (e) {\n        dispatch({\n          type: PUT_FAILURE,\n          error: e,\n        });\n      }\n    }, []),\n  }\n  return propsLocal;\n};\n\nexport default useRequest;\n"]},"metadata":{},"sourceType":"module"}