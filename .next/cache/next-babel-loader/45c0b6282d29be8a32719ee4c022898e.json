{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext } from 'react';\nimport { DataContext, DataProvider } from '../../contexts/DataContext';\nimport SpeakerSearchBar from '../SpeakerSearchBar/SpeakerSearchBar';\nimport Speaker from '../Speaker/Speaker';\nimport { REQUEST_STATUS } from '../../reducers/request';\n\nconst SpeakersComponent = () => {\n  const specialMessage = '';\n  const {\n    records: speakers,\n    status,\n    error,\n    put\n  } = useContext(DataContext);\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState('');\n  const success = status === REQUEST_STATUS.SUCCESS;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  const hasErrored = status === REQUEST_STATUS.ERROR;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(SpeakerSearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }), specialMessage && specialMessage.length > 0 && /*#__PURE__*/_jsxs(\"div\", {\n      className: \"bg-orange-100 border-l-8 border-orange-500 text-orange-700 p-4 text-2xl\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        className: \"font-bold\",\n        children: \"Special Message\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: specialMessage\n      })]\n    }), isLoading && /*#__PURE__*/_jsx(\"div\", {\n      children: \"Loading...\"\n    }), hasErrored && /*#__PURE__*/_jsxs(\"div\", {\n      children: [\"Loading error... Is the json-server running? (try \\\"npm run json-server\\\" at terminal prompt)\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"b\", {\n        children: [\"ERROR: \", error.message]\n      })]\n    }), success && /*#__PURE__*/_jsx(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.filter(rec => {\n        const targetString = `${rec.firstName} ${rec.lastName}`.toLowerCase();\n        return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n      }).map(speaker => /*#__PURE__*/_jsx(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n        put: put\n      }), speaker.id))\n    })]\n  });\n};\n\nconst Speakers = props => {\n  return /*#__PURE__*/_jsx(DataProvider, {\n    baseUrl: \"http://localhost:4000\",\n    routeName: \"speakers\",\n    children: /*#__PURE__*/_jsx(SpeakersComponent, _objectSpread({}, props))\n  });\n};\n\nexport default Speakers;","map":null,"metadata":{},"sourceType":"module"}