{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/swungleek/7a739554-06f9-4564-a099-49f4b83047ae/CDD/React/ps-drc/src/components/Speakers/Speakers.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Speaker from '../Speaker/Speaker';\nimport SpeakerSearchBar from '../SpeakerSearchBar/SpeakerSearchBar';\n\nconst Speakers = () => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n  const speakersArray = [{\n    imageSrc: 'speaker-component-1124',\n    name: 'Douglas Crockford',\n    id: 1124,\n    firstName: 'Douglas',\n    lastName: 'Crockford',\n    sat: true,\n    sun: false,\n    isFavorite: false,\n    bio: 'Douglas Crockford discovered the JSON Data Interchange Format. He is also the author of _JavaScript: The Good Parts_. He has been called a guru, but he is actually more of a mahatma.'\n  }, {\n    imageSrc: 'speaker-component-1530',\n    name: 'Tamara Baker',\n    id: 1530,\n    firstName: 'Tamara',\n    lastName: 'Baker',\n    sat: false,\n    sun: true,\n    isFavorite: true,\n    bio: 'Tammy has held a number of executive and management roles over the past 15 years, including VP engineering Roles at Molekule Inc., Cantaloupe Systems, E-Color, and Untangle Inc.'\n  }, {\n    imageSrc: 'speaker-component-10803',\n    name: 'Eugene Chuvyrov',\n    id: 10803,\n    firstName: 'Eugene',\n    lastName: 'Chuvyrov',\n    sat: true,\n    sun: false,\n    isFavorite: false,\n    bio: 'Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.'\n  }];\n\n  function toggleSpeakerFavorite(speakerRec) {\n    return _objectSpread(_objectSpread({}, speakerRec), {}, {\n      isFavorite: !speakerRec.isFavorite\n    });\n  }\n\n  function onFavoriteToggleHandler(speakerRec) {\n    const toggledSpeakerRec = toggleSpeakerFavorite(speakerRec);\n    const speakerIndex = speakers.map(speaker => speaker.id).indexOf(speakerRec.id);\n    setSpeakers([...speakers.slice(0, speakerIndex), toggledSpeakerRec, ...speakers.slice(speakerIndex + 1)]);\n  }\n\n  const {\n    0: speakers,\n    1: setSpeakers\n  } = useState(speakersArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpeakerSearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.filter(rec => {\n        const targetString = `${rec.firstName} ${rec.lastName}`.toLowerCase();\n        return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLocaleLowerCase());\n      }).map(speaker => /*#__PURE__*/_jsxDEV(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n        onFavoriteToggle: () => onFavoriteToggleHandler(speaker)\n      }), speaker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/media/swungleek/7a739554-06f9-4564-a099-49f4b83047ae/CDD/React/ps-drc/src/components/Speakers/Speakers.js"],"names":["React","useState","Speaker","SpeakerSearchBar","Speakers","searchQuery","setSearchQuery","speakersArray","imageSrc","name","id","firstName","lastName","sat","sun","isFavorite","bio","toggleSpeakerFavorite","speakerRec","onFavoriteToggleHandler","toggledSpeakerRec","speakerIndex","speakers","map","speaker","indexOf","setSpeakers","slice","filter","rec","targetString","toLowerCase","length","includes","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\n\nimport Speaker from'../Speaker/Speaker';\nimport SpeakerSearchBar from '../SpeakerSearchBar/SpeakerSearchBar';\n\nconst Speakers = () => {\n\n  const [searchQuery,setSearchQuery] = useState(\"\");\n  const speakersArray = [\n    {\n      imageSrc: 'speaker-component-1124',\n      name: 'Douglas Crockford',\n      id: 1124,\n      firstName: 'Douglas',\n      lastName: 'Crockford',\n      sat: true,\n      sun: false,\n      isFavorite: false,\n      bio:\n        'Douglas Crockford discovered the JSON Data Interchange Format. He is also the author of _JavaScript: The Good Parts_. He has been called a guru, but he is actually more of a mahatma.',\n    },\n    {\n      imageSrc: 'speaker-component-1530',\n      name: 'Tamara Baker',\n      id: 1530,\n      firstName: 'Tamara',\n      lastName: 'Baker',\n      sat: false,\n      sun: true,\n      isFavorite: true,\n      bio:\n        'Tammy has held a number of executive and management roles over the past 15 years, including VP engineering Roles at Molekule Inc., Cantaloupe Systems, E-Color, and Untangle Inc.',\n    },\n    {\n      imageSrc: 'speaker-component-10803',\n      name: 'Eugene Chuvyrov',\n      id: 10803,\n      firstName: 'Eugene',\n      lastName: 'Chuvyrov',\n      sat: true,\n      sun: false,\n      isFavorite: false,\n      bio:\n        'Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.',\n    },\n  ];\n\n  function toggleSpeakerFavorite(speakerRec) {\n    return {\n      ...speakerRec,\n      isFavorite: !speakerRec.isFavorite,\n    };\n  }\n\n  function onFavoriteToggleHandler(speakerRec) {\n    const toggledSpeakerRec = toggleSpeakerFavorite(speakerRec);\n    const speakerIndex = speakers.map((speaker) => speaker.id).indexOf(speakerRec.id);\n    setSpeakers\n     ([...speakers.slice(0, speakerIndex), toggledSpeakerRec, ...speakers.slice(speakerIndex + 1)]);\n  }\n\n  const [speakers, setSpeakers ] = useState(speakersArray);\n  return (\n    <div>\n      <SpeakerSearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n                {speakers\n                .filter((rec) => {\n                  const targetString = `${rec.firstName} ${rec.lastName}`.toLowerCase();\n                  return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLocaleLowerCase());\n                })\n                .map((speaker => (\n                  <Speaker key={speaker.id} {...speaker} \n                  onFavoriteToggle={() => onFavoriteToggleHandler(speaker) } /> )\n                  ))}\n      </div>\n    </div>\n  );\n};\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}