{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from 'react';\nimport requestReducer, { REQUEST_STATUS } from '../reducers/request';\nimport axios from 'axios';\nimport { GET_ALL_FAILURE, GET_ALL_SUCCESS, PUT_FAILURE, PUT_SUCCESS } from '../actions/request';\n\nvar useRequest = function useRequest(baseUrl, routeName) {\n  _s();\n\n  var _useReducer = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null\n  }),\n      _useReducer$ = _useReducer[0],\n      records = _useReducer$.records,\n      status = _useReducer$.status,\n      error = _useReducer$.error,\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(baseUrl, \"/\").concat(routeName));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: GET_ALL_SUCCESS,\n                  records: response.data\n                });\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log('Loading data error', _context.t0);\n                dispatch({\n                  type: GET_ALL_FAILURE,\n                  error: _context.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [baseUrl, routeName]);\n  var propsLocal = {\n    records: records,\n    status: status,\n    error: error,\n    put: React.useCallback( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(record) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.put(\"\".concat(baseUrl, \"/\").concat(routeName, \"/\").concat(record.id), record);\n\n              case 3:\n                dispatch({\n                  type: PUT_SUCCESS,\n                  record: record\n                });\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: PUT_FAILURE,\n                  error: _context2.t0\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 6]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(), [])\n  };\n  return propsLocal;\n};\n\n_s(useRequest, \"w6XJHYNkAVMTL/pm9tvVKVVJCjw=\");\n\nexport default useRequest;","map":{"version":3,"sources":["/media/swungleek/7a739554-06f9-4564-a099-49f4b83047ae/CDD/React/ps-drc/src/hooks/useRequest.js"],"names":["React","useReducer","useEffect","requestReducer","REQUEST_STATUS","axios","GET_ALL_FAILURE","GET_ALL_SUCCESS","PUT_FAILURE","PUT_SUCCESS","useRequest","baseUrl","routeName","status","LOADING","records","error","dispatch","fetchData","get","response","type","data","console","log","propsLocal","put","useCallback","record","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,cAAP,IAAyBC,cAAzB,QAA+C,qBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,oBALP;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUC,SAAV,EAAwB;AAAA;;AAAA,oBACMX,UAAU,CAACE,cAAD,EAAiB;AACxEU,IAAAA,MAAM,EAAET,cAAc,CAACU,OADiD;AAExEC,IAAAA,OAAO,EAAE,EAF+D;AAGxEC,IAAAA,KAAK,EAAE;AAHiE,GAAjB,CADhB;AAAA;AAAA,MAChCD,OADgC,gBAChCA,OADgC;AAAA,MACvBF,MADuB,gBACvBA,MADuB;AAAA,MACfG,KADe,gBACfA,KADe;AAAA,MACNC,QADM;;AAOzCf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAESb,KAAK,CAACc,GAAN,WAAaR,OAAb,cAAwBC,SAAxB,EAFT;;AAAA;AAERQ,gBAAAA,QAFQ;AAGdH,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEd,eADC;AAEPQ,kBAAAA,OAAO,EAAEK,QAAQ,CAACE;AAFX,iBAAD,CAAR;AAHc;AAAA;;AAAA;AAAA;AAAA;AAQdC,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEAP,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEf,eADC;AAEPU,kBAAAA,KAAK;AAFE,iBAAD,CAAR;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATE,SAAS;AAAA;AAAA;AAAA,OAAf;;AAgBAA,IAAAA,SAAS;AACV,GAlBQ,EAkBN,CAACP,OAAD,EAAUC,SAAV,CAlBM,CAAT;AAoBA,MAAMa,UAAU,GAAG;AACjBV,IAAAA,OAAO,EAAPA,OADiB;AAEjBF,IAAAA,MAAM,EAANA,MAFiB;AAGjBG,IAAAA,KAAK,EAALA,KAHiB;AAIjBU,IAAAA,GAAG,EAAE1B,KAAK,CAAC2B,WAAN;AAAA,2EAAkB,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEbvB,KAAK,CAACqB,GAAN,WAAaf,OAAb,cAAwBC,SAAxB,cAAqCgB,MAAM,CAACC,EAA5C,GAAkDD,MAAlD,CAFa;;AAAA;AAGnBX,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEZ,WADC;AAEPmB,kBAAAA,MAAM,EAAEA;AAFD,iBAAD,CAAR;AAHmB;AAAA;;AAAA;AAAA;AAAA;AAQnBX,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEb,WADC;AAEPQ,kBAAAA,KAAK;AAFE,iBAAD,CAAR;;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;;AAAA;AAAA;AAAA;AAAA,SAaF,EAbE;AAJY,GAAnB;AAmBA,SAAOS,UAAP;AACD,CA/CD;;GAAMf,U;;AAiDN,eAAeA,UAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport requestReducer, { REQUEST_STATUS } from '../reducers/request';\nimport axios from 'axios';\nimport {\n  GET_ALL_FAILURE,\n  GET_ALL_SUCCESS,\n  PUT_FAILURE,\n  PUT_SUCCESS,\n} from '../actions/request';\n\nconst useRequest = (baseUrl, routeName) => {\n  const [{ records, status, error }, dispatch] = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${baseUrl}/${routeName}`);\n        dispatch({\n          type: GET_ALL_SUCCESS,\n          records: response.data,\n        });\n      } catch (e) {\n        console.log('Loading data error', e);\n\n        dispatch({\n          type: GET_ALL_FAILURE,\n          error: e,\n        });\n      }\n    };\n    fetchData();\n  }, [baseUrl, routeName]);\n\n  const propsLocal = {\n    records,\n    status,\n    error,\n    put: React.useCallback(async (record) => {\n      try {\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\n        dispatch({\n          type: PUT_SUCCESS,\n          record: record,\n        });\n      } catch (e) {\n        dispatch({\n          type: PUT_FAILURE,\n          error: e,\n        });\n      }\n    }, []),\n  }\n  return propsLocal;\n};\n\nexport default useRequest;\n"]},"metadata":{},"sourceType":"module"}