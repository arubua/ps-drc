{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport requestReducer, { REQUEST_STATUS } from '../../reducers/request';\nimport { PUT_SUCCESS, PUT_FAILURE, GET_ALL_SUCCESS, GET_ALL_FAILURE } from '../../actions/request';\n\nvar Request = function Request(_ref) {\n  _s();\n\n  var baseUrl = _ref.baseUrl,\n      routeName = _ref.routeName,\n      children = _ref.children;\n\n  var _useReducer = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null\n  }),\n      _useReducer$ = _useReducer[0],\n      records = _useReducer$.records,\n      status = _useReducer$.status,\n      error = _useReducer$.error,\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(baseUrl, \"/\").concat(routeName));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: GET_ALL_SUCCESS,\n                  records: response.data\n                });\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log('Loading data error', _context.t0);\n                dispatch({\n                  type: GET_ALL_FAILURE,\n                  error: _context.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [baseUrl, routeName]);\n  var childProps = {\n    records: records,\n    status: status,\n    error: error,\n    put: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(record) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: 'PUT'\n                });\n                _context2.prev = 1;\n                _context2.next = 4;\n                return axios.put(\"\".concat(baseUrl, \"/\").concat(routeName, \"/\").concat(record.id), record);\n\n              case 4:\n                dispatch({\n                  type: PUT_SUCCESS,\n                  record: record\n                });\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n                dispatch({\n                  type: PUT_FAILURE,\n                  error: _context2.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 7]]);\n      }));\n\n      function put(_x) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  };\n  return children(childProps);\n};\n\n_s(Request, \"XSEoqpZW6fYFq4ep5B6q+qwNe6I=\");\n\n_c = Request;\nexport default Request;\n\nvar _c;\n\n$RefreshReg$(_c, \"Request\");","map":{"version":3,"sources":["/media/swungleek/7a739554-06f9-4564-a099-49f4b83047ae/CDD/React/ps-drc/src/components/RPs/Request.js"],"names":["React","useEffect","useReducer","axios","requestReducer","REQUEST_STATUS","PUT_SUCCESS","PUT_FAILURE","GET_ALL_SUCCESS","GET_ALL_FAILURE","Request","baseUrl","routeName","children","status","LOADING","records","error","dispatch","fetchData","get","response","type","data","console","log","childProps","put","record","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,IAAyBC,cAAzB,QAA+C,wBAA/C;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,eAJF,QAKO,uBALP;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAsC;AAAA;;AAAA,MAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACLX,UAAU,CAACE,cAAD,EAAiB;AACxEU,IAAAA,MAAM,EAAET,cAAc,CAACU,OADiD;AAExEC,IAAAA,OAAO,EAAE,EAF+D;AAGxEC,IAAAA,KAAK,EAAE;AAHiE,GAAjB,CADL;AAAA;AAAA,MAC3CD,OAD2C,gBAC3CA,OAD2C;AAAA,MAClCF,MADkC,gBAClCA,MADkC;AAAA,MAC1BG,KAD0B,gBAC1BA,KAD0B;AAAA,MACjBC,QADiB;;AAOpDjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkB,SAAS;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEShB,KAAK,CAACiB,GAAN,WAAaT,OAAb,cAAwBC,SAAxB,EAFT;;AAAA;AAERS,gBAAAA,QAFQ;AAGdH,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEd,eADC;AAEPQ,kBAAAA,OAAO,EAAEK,QAAQ,CAACE;AAFX,iBAAD,CAAR;AAHc;AAAA;;AAAA;AAAA;AAAA;AAQdC,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAP,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEb,eADC;AAEPQ,kBAAAA,KAAK;AAFE,iBAAD,CAAR;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATE,SAAS;AAAA;AAAA;AAAA,OAAf;;AAeAA,IAAAA,SAAS;AACV,GAjBQ,EAiBN,CAACR,OAAD,EAAUC,SAAV,CAjBM,CAAT;AAmBA,MAAMc,UAAU,GAAG;AACjBV,IAAAA,OAAO,EAAPA,OADiB;AAEjBF,IAAAA,MAAM,EAANA,MAFiB;AAGjBG,IAAAA,KAAK,EAALA,KAHiB;AAIjBU,IAAAA,GAAG;AAAA,0EAAE,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AACHV,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAE;AADC,iBAAD,CAAR;AADG;AAAA;AAAA,uBAKKnB,KAAK,CAACwB,GAAN,WAAahB,OAAb,cAAwBC,SAAxB,cAAqCgB,MAAM,CAACC,EAA5C,GAAkDD,MAAlD,CALL;;AAAA;AAMDV,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEhB,WADC;AAEPsB,kBAAAA,MAAM,EAANA;AAFO,iBAAD,CAAR;AANC;AAAA;;AAAA;AAAA;AAAA;AAWDV,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEf,WADC;AAEPU,kBAAAA,KAAK;AAFE,iBAAD,CAAR;;AAXC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJc,GAAnB;AAuBA,SAAOJ,QAAQ,CAACa,UAAD,CAAf;AACD,CAlDD;;GAAMhB,O;;KAAAA,O;AAoDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nimport requestReducer, { REQUEST_STATUS } from '../../reducers/request';\nimport {\n  PUT_SUCCESS,\n  PUT_FAILURE,\n  GET_ALL_SUCCESS,\n  GET_ALL_FAILURE,\n} from '../../actions/request';\n\nconst Request = ({ baseUrl, routeName, children }) => {\n  const [{ records, status, error }, dispatch] = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${baseUrl}/${routeName}`);\n        dispatch({\n          type: GET_ALL_SUCCESS,\n          records: response.data,\n        });\n      } catch (e) {\n        console.log('Loading data error', e);\n        dispatch({\n          type: GET_ALL_FAILURE,\n          error: e,\n        });\n      }\n    };\n    fetchData();\n  }, [baseUrl, routeName]);\n\n  const childProps = {\n    records,\n    status,\n    error,\n    put: async (record) => {\n      dispatch({\n        type: 'PUT',\n      });\n      try {\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\n        dispatch({\n          type: PUT_SUCCESS,\n          record,\n        });\n      } catch (e) {\n        dispatch({\n          type: PUT_FAILURE,\n          error: e,\n        });\n      }\n    },\n  };\n\n  return children(childProps);\n};\n\nexport default Request;\n"]},"metadata":{},"sourceType":"module"}